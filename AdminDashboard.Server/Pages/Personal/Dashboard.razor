@page "/personal/dashboard"
@using DataAccess.Entities
@using MudBlazor
@using Business.Repository.IRepository
@using Common
@using System.Net.Http.Json

@inject IDialogService Dialog
@inject IB2COrdersRepository _OrderRepo
@inject ISnackbar Snackbar

<MudText Typo="Typo.h5" Color="Color.Primary" Class="mb-4">Dashboard</MudText>
<MudGrid>
    <MudItem xs="12" sm="6" md="3">
        <MudPaper Elevation="25" Class="d-flex flex-row pt-6 pb-4" Style="height:100px;">
            <MudIcon Icon="@Icons.Material.Sharp.AccountBalance" Color="Color.Primary" Class="mx-4" Style="width:54px; height:54px;"></MudIcon>
            <div>
                <MudText Typo="Typo.subtitle1" Class="mud-text-secondary mb-n1">Total Jewellery Sales</MudText>
                <MudText Typo="Typo.h5">0</MudText>
            </div>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" md="3">
        <MudPaper Elevation="25" Class="d-flex flex-row pt-6 pb-4" Style="height:100px;">
            <MudIcon Icon="@Icons.Material.Filled.Layers" Color="Color.Secondary" Class="mx-4" Style="width:54px; height:54px;"></MudIcon>
            <div>
                <MudText Typo="Typo.subtitle1" Class="mud-text-secondary mb-n1">Total Diamond Sales</MudText>
                <MudText Typo="Typo.h5">0</MudText>
            </div>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" md="3">
        <MudPaper Elevation="25" Class="d-flex flex-row pt-6 pb-4" Style="height:100px;">
            <MudIcon Icon="@Icons.Material.Filled.Public" Color="Color.Success" Class="mx-4" Style="width:54px; height:54px;"></MudIcon>
            <div>
                <MudText Typo="Typo.subtitle1" Class="mud-text-secondary mb-n1">Total Revenue</MudText>
                <MudText Typo="Typo.h5">0</MudText>
            </div>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" md="3">
        <MudPaper Elevation="25" Class="d-flex flex-row pt-6 pb-4" Style="height:100px;">
            <MudIcon Icon="@Icons.Custom.Uncategorized.Radioactive" Color="Color.Warning" Class="mx-4" Style="width:54px; height:54px;"></MudIcon>
            <div>
                <MudText Typo="Typo.subtitle1" Class="mud-text-secondary mb-n1">New Orders</MudText>
                <MudText Typo="Typo.h5">0</MudText>
            </div>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="12" md="6">
        <MudCard Elevation="25" Style="height:100%;">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">Live Orders Process</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent Class="px-0">
                <MudSimpleTable Elevation="0" Hover="true">
                    <thead>
                        <tr>
                            <th>Order Code</th>
                            <th>Order Date</th>
                            <th>Customer Code</th>
                            <th>Net Amount</th>
                            <th>Payment Status</th>
                            <th>Order Process Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var report in RequestOrders.OrderBy(x => x.OrderCode))
                        {
                            <tr>
                                <td>
                                    <MudText Typo="Typo.subtitle2">@report.OrderCode</MudText>
                                </td>
                                <td><MudText Typo="Typo.subtitle2">@report.OrderDate</MudText></td>
                                <td><MudText Typo="Typo.body2">@report.CustomerCode</MudText></td>
                                <td><MudText Typo="Typo.body2">@report.NetAmount</MudText></td>
                                <td><MudText Typo="Typo.body2">Paid</MudText></td>
                                <td><MudText Typo="Typo.body2">Complated</MudText></td>
                            </tr>
                        }
                    </tbody>
                </MudSimpleTable>
            </MudCardContent>
        </MudCard>
    </MudItem>
    <MudItem xs="12" sm="12" md="6">
        <MudCard Elevation="25" Style="height:100%;">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">New Orders Received</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent Class="px-0">
                <MudSimpleTable Elevation="0" Hover="true">
                    <thead>
                        <tr>
                            <th>Order Code</th>
                            <th>Order Date</th>
                            <th>Customer Code</th>
                            <th>Net Amount</th>
                            <th>Payment Status</th>
                            <th>Order Process Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var report in RequestOrders.OrderBy(x => x.OrderCode))
                        {
                            <tr>
                                <td>
                                    <MudText Typo="Typo.subtitle2">@report.OrderCode</MudText>
                                </td>
                                <td><MudText Typo="Typo.subtitle2">@report.OrderDate</MudText></td>
                                <td><MudText Typo="Typo.body2">@report.CustomerCode</MudText></td>
                                <td><MudText Typo="Typo.body2">@report.NetAmount</MudText></td>
                                <td><MudText Typo="Typo.body2">Paid</MudText></td>
                                <td><MudText Typo="Typo.body2">Complated</MudText></td>
                            </tr>
                        }
                    </tbody>
                </MudSimpleTable>
            </MudCardContent>
        </MudCard>
    </MudItem>



    <MudItem xs="12" sm="8">
        <MudPaper Elevation="25" Class="doc-section-component-container" Style="height:400px;">
            <MudChart ChartType="ChartType.Line" ChartSeries="@_series" @bind-SelectedIndex="_index" XAxisLabels="@_xAxisLabels" Width="@_width" Height="@_height" ChartOptions="@_options" AxisChartOptions="_axisChartOptions" />
        </MudPaper>
    </MudItem>

    <MudItem xs="12" sm="4">
        <MudPaper Elevation="25" Class="pa-4" Style="height:400px;">
            <MudChart ChartType="ChartType.Pie" InputData="@data" @bind-SelectedIndex="Index" InputLabels="@labels" Width="300px" Height="300px" />
        </MudPaper>
    </MudItem>

   

</MudGrid>






@code {
        [Inject]
        public HttpClient Http { get; set; } = default!;

        private IEnumerable<CustomerOrders> RequestOrders { get; set; } = Enumerable.Empty<CustomerOrders>();

        protected override async Task OnInitializedAsync()
        {
            try
            {
                var url = $"{SD.BaseApiUrl}/api/B2C/Order-Processing-List";
                var result = await Http.GetFromJsonAsync<IEnumerable<CustomerOrders>>(url);
                RequestOrders = result ?? Enumerable.Empty<CustomerOrders>();
            }
            catch (Exception ex)
            {
                // Log the error or handle it accordingly
                Console.Error.WriteLine($"Error fetching order list: {ex.Message}");
                RequestOrders = Enumerable.Empty<CustomerOrders>();
            }
        }


        EarningReport[] earningReports = new EarningReport[]
        {
                new EarningReport { Name = "Lunees", Title = "Reactor Engineer", Avatar = "https://avatars2.githubusercontent.com/u/71094850?s=460&u=66c16f5bb7d27dc751f6759a82a3a070c8c7fe4b&v=4", Salary = "$0.99", Severity = Color.Success, SeverityTitle = "Low"},
                new EarningReport { Name = "Mikes-gh", Title = "Developer", Avatar = "https://avatars.githubusercontent.com/u/16208742?s=120&v=4", Salary = "$19.12K", Severity = Color.Secondary, SeverityTitle = "Medium"},
                new EarningReport { Name = "Garderoben", Title = "CSS Magician", Avatar = "https://avatars2.githubusercontent.com/u/10367109?s=460&amp;u=2abf95f9e01132e8e2915def42895ffe99c5d2c6&amp;v=4", Salary = "$1337", Severity = Color.Primary, SeverityTitle = "High"},
        };

    class EarningReport
    {
        public string Avatar;
        public string Name;
        public string Title;
        public Color Severity;
        public string SeverityTitle;
        public string Salary;
    }
    private ChartOptions _options = new ChartOptions();
    private string _width = "650px";
    private string _height = "350px";
    private int _index = -1;
    private int Index = -1; //default value cannot be 0 -> first selectedindex is 0.
    int dataSize = 4;
    double[] data = { 77 };
    string[] labels = { "Uranium", "Plutonium", "Thorium", "Caesium", "Technetium", "Promethium",
                        "Polonium", "Astatine", "Radon", "Francium", "Radium", "Actinium", "Protactinium",
                        "Neptunium", "Americium", "Curium", "Berkelium", "Californium", "Einsteinium", "Mudblaznium" };

    private List<ChartSeries> _series = new List<ChartSeries>()
{
        new ChartSeries() { Name = "Fossil", Data = new double[] { 90, 79, 72, 69, 62, 62, 55, 65, 70 } },
        new ChartSeries() { Name = "Renewable", Data = new double[] { 10, 41, 35, 51, 49, 62, 69, 91, 148 } },
    };
    private string[] _xAxisLabels = { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep" };
}