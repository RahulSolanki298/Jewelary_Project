@using Common
@inject ISnackbar Snackbar

<MudDialog>
	<TitleContent>
		Add Products Images
	</TitleContent>
	<DialogContent>
		<InputFile OnChange="HandleFileSelected" />
		@if (isUploading == true)
		{
			<MudProgressCircular Color="Color.Default" Indeterminate="true" />
		}
		<MudToolBarSpacer />
		<p><span style="font-weight:bold">Note :</span></p>
		<p>Please upload product images. (ex: Essentials, Solitaire Ring, Mini Huggies)</p>
		<p>Download Excel Format : <MudButton Color="Color.Primary">Download</MudButton></p>
	</DialogContent>
	<DialogActions>
		<MudButton Color="Color.Error">Cancel</MudButton>
	</DialogActions>
</MudDialog>



@code {
    private IBrowserFile selectedFile;
    private bool isUploading = false;

    [Inject]
    private HttpClient Http { get; set; }


    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;
        isUploading = true;     // Start showing the loader

        if (selectedFile == null)
        {
            Snackbar.Add("No file selected.", Severity.Warning);
            return;
        }

        try
        {
            var fileContent = new MultipartFormDataContent();

            //options.MultipartBodyLengthLimit = 5368709120;
            var stream = selectedFile.OpenReadStream(maxAllowedSize: 5_368_709_120);

            var fileStreamContent = new StreamContent(stream);
            fileStreamContent.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue("application/octet-stream");

            fileContent.Add(fileStreamContent, "file", selectedFile.Name);

            var response = await Http.PostAsync($"{SD.BaseApiUrl}/api/product/BulkProductCollectionUpload", fileContent);

            if (response.IsSuccessStatusCode)
            {
                Snackbar.Add("Product collection uploaded successfully!", Severity.Success);
            }
            else
            {
                var error = await response.Content.ReadAsStringAsync();
                Snackbar.Add("Failed to upload product images. Please try again.", Severity.Error);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error: {ex.Message}", Severity.Error);
        }
        finally
        {
            isUploading = false;
        }
    }
}