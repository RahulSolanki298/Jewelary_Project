@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<MudThemeProvider Theme="_themeManager.Theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>

    <!-- AppBar -->
    <MudAppBar Elevation="4">
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
            @* <MudIcon Icon="@Icons.Custom.Brands.MudBlazor" Size="Size.Large" /> *@
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.MdAndUp">
            <MudIconButton Icon="@Icons.Material.Outlined.Menu"
                           Color="Color.Inherit"
                           Edge="Edge.Start"
                           OnClick="@DrawerToggle" />
        </MudHidden>

        <MudHidden Breakpoint="Breakpoint.Xs">
            <MudText Typo="Typo.h6" Class="ml-4">Admin Dashboard</MudText>
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.Xs" Invert="true">
            <MudText Typo="Typo.subtitle2">Admin Dashboard</MudText>
        </MudHidden>

        <MudAppBarSpacer />

        <!-- Language Selector -->
        @*<MudMenu Icon="@Icons.Material.Outlined.Translate"
                 Color="Color.Inherit"
                 Direction="Direction.Bottom"
                 OffsetY="true"
                 Dense="true">
            <MudMenuItem>English</MudMenuItem>
            <MudMenuItem>Swedish</MudMenuItem>
            <MudMenuItem>Old Norse</MudMenuItem>
        </MudMenu>*@

        <!-- Links -->
        <MudMenu Icon="@Icons.Material.Outlined.Widgets"
                 Color="Color.Inherit"
                 Direction="Direction.Bottom"
                 OffsetY="true"
                 Dense="true">
            @*  <MudMenuItem Href="https://mudblazor.com/">MudBlazor</MudMenuItem>
                <MudMenuItem Href="https://github.com/Garderoben/MudBlazor.Templates">Source Code</MudMenuItem> *@
        </MudMenu>

        <!-- User Menu -->
        <MudMenu Direction="Direction.Left" OffsetX="true" Dense="true" Class="mt-1 ml-4">
            <ActivatorContent>
                <MudAvatar Image="images/avatar_jonny.jpg" />
            </ActivatorContent>
            <ChildContent>
                <PersonCard Class="mt-n2" />
                <MudDivider Class="mb-2" />
                <MudListItem Text="Account" Icon="@Icons.Material.Outlined.Person" Href="/personal/account" />
                <MudListItem Text="Logout" Icon="@Icons.Material.Outlined.Login" @onclick="LogoutAsync" />
            </ChildContent>
        </MudMenu>
    </MudAppBar>

    <!-- Drawer -->
    <MudDrawer @bind-Open="_drawerOpen"
               Elevation="25"
               ClipMode="_themeManager.DrawerClipMode">
        <NavMenu />
    </MudDrawer>

    <!-- Main Content -->
    <MudMainContent>
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
            <MudToolBar DisableGutters="true">
                <MudIconButton Icon="@Icons.Material.Outlined.Menu"
                               Color="Color.Inherit"
                               OnClick="@DrawerToggle"
                               Class="ml-3" />
                <MudBreadcrumbs Items="_items" />

                <MudToolBarSpacer />
            </MudToolBar>
        </MudHidden>

        <!-- Page Body -->
        @if (_isLoading)
        {
            <MudProgressCircular Indeterminate="true" Color="Color.Primary" Size="Size.Large" Class="loader-overlay" />
        }
        @Body
    </MudMainContent>
</MudLayout>

<!-- Theme Manager Controls -->
@* <MudThemeManagerButton OnClick="@(() => OpenThemeManager(true))" />
    <MudThemeManager Open="_themeManagerOpen"
                     OpenChanged="OpenThemeManager"
                     Theme="_themeManager"
                     ThemeChanged="UpdateTheme" /> *@

@code {
    #region Fields
    private ThemeManagerTheme _themeManager = new();
    private bool _drawerOpen = true;
    private bool _themeManagerOpen = false;
    private bool _isLoading = false;
    private bool success = false;
    #endregion

    #region Lifecycle
    protected override void OnInitialized()
    {
        _themeManager = new ThemeManagerTheme
        {
            Theme = new MudBlazorAdminDashboard(),
            DrawerClipMode = DrawerClipMode.Always,
            FontFamily = "Montserrat",
            DefaultBorderRadius = 3
        };
    }
    #endregion

    #region Methods
    private void DrawerToggle() => _drawerOpen = !_drawerOpen;

    private void OpenThemeManager(bool value) => _themeManagerOpen = value;

    private void UpdateTheme(ThemeManagerTheme value)
    {
        _themeManager = value;
        StateHasChanged();
    }
    #endregion

    #region Breadcrumbs
    private readonly List<BreadcrumbItem> _items = new()
    {
            new BreadcrumbItem("Personal", href: "#"),
            new BreadcrumbItem("Dashboard", href: "#"),
        };

    private async Task LogoutAsync()
    {
        try
        {
            // Remove token from localStorage
            await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "token");

            // Optional: clear any in-memory authentication flags if needed
            success = false;

            // Navigate to login or home page
            NavigationManager.NavigateTo("/", forceLoad: true);
        }
        catch (Exception ex)
        {
            // Handle potential logout issues (e.g., JS interop errors)
            Console.WriteLine($"Logout failed: {ex.Message}");
        }

    }
    #endregion
}
