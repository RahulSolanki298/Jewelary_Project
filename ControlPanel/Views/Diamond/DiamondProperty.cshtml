@model IEnumerable<Models.DiamondPropertyDTO>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    int Index = 1;
}


<section class="section dashboard">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="h4"><b>Diamond Parameter Master</b></h2>
        <a class="btn btn-theme" href="@Url.Action("AddDiamondProperty", "Diamond")">
            <i class="bi bi-plus-circle me-1"></i>
            Add New
        </a>
    </div>

    <div class="row">
        <div class="col-xxl-6 col-xl-6 col-lg-6 col-md-12">
            <div class="card recent-sales overflow-auto">

                @*  <div class="filter">
                    <a class="icon" href="#" data-bs-toggle="dropdown"><i class="bi bi-three-dots"></i></a>
                </div> *@

                <div class="card-body">
                    <h5 class="card-title">Main Properties</h5>
                    <table class="table table-borderless datatable mb-0" id="diamondProperty">
                        <thead class="table-light text-center">
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col">Name</th>
                                <th scope="col">Status</th>
                                <th scope="col">Action</th>
                            </tr>
                        </thead>
                        <tbody class="text-center">
                            @if (Model != null && Model.Any(x => x.ParentId == null))
                            {
                                foreach (var item in Model.Where(x => x.ParentId == null))
                                {
                                    <tr class="clickable-row" data-propertyname="@item.Name">
                                        <td>@(Index++)</td>
                                        <td>@item.Name</td>
                                        <td>
                                            @if (item.IsActivated)
                                            {
                                                <span class="badge bg-success">Active</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">Draft</span>
                                            }
                                        </td>
                                        <td>
                                            <div class="dropdown">
                                                <a class="" data-bs-toggle="dropdown" aria-expanded="false">
                                                    <i class="bi bi-three-dots-vertical"></i>
                                                </a>
                                                <ul class="dropdown-menu">
                                                    <li>
                                                        <a class="dropdown-item" href="@Url.Action("AddDiamondProperty", "Diamond", new { pId = item.Id })">
                                                            <i class="bi bi-pencil-square me-1"></i>Edit
                                                        </a>
                                                    </li>
                                                    <li>
                                                        @*  <a class="dropdown-item text-danger" href="@Url.Action("DeleteDiamondProperty", "Diamond", new { pId = item.Id })">
                                                    <i class="bi bi-trash me-1"></i>Delete
                                                </a> *@
                                                        <a href="#" class="dropdown-item text-danger delete-confirm-main-para"
                                                           data-url="@Url.Action("DeleteDiamondProperty", "Diamond", new { pId = item.Id })">
                                                            <i class="bi bi-trash me-1"></i>Delete
                                                        </a>

                                                    </li>
                                                </ul>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="4" class="text-center text-muted">No properties found.</td>
                                </tr>
                            }
                        </tbody>
                    </table>

                </div>

            </div>
        </div>
        <div class="col-xxl-6 col-xl-6 col-lg-6 col-md-12">
            <div class="card recent-sales overflow-auto" id="propertyDT">
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        $(document).on('click', '.clickable-row', function (e) {
            debugger;
                if ($(e.target).closest('.dropdown').length > 0) return; // Don't trigger when clicking dropdown
                var propertyName = $(this).data('propertyname');
                $.ajax({
                    url: '@Url.Action("DiamondPropertyItems", "Diamond")' + '?propertyName=' + encodeURIComponent(propertyName),
                    method: 'GET',
                    contentType: 'application/json',
                    success: function (data) {
                        $("#propertyDT").empty().html(data);
                    },
                    error: function (xhr, status, error) {
                        console.error('API call failed:', error);
                    }
                });
            });


    </script>

    
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            document.body.addEventListener('click', function (e) {
                const target = e.target.closest('.delete-confirm-main-para');
                if (!target) return;

                e.preventDefault();
                const url = target.getAttribute('data-url');

                Swal.fire({
                    title: 'Are you sure?',
                    text: "you want to delete this?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Delete',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = url;
                    }
                });
            });
        });
    </script>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            document.body.addEventListener('click', function (e) {
                const target = e.target.closest('.delete-confirm-sub-para');
                if (!target) return;

                e.preventDefault();
                const url = target.getAttribute('data-url');

                Swal.fire({
                    title: 'Are you sure?',
                    text: "you want to delete this?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Delete',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = url;
                    }
                });
            });
        });
    </script>


}