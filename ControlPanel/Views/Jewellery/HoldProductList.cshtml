@model IEnumerable<Models.ProductDTO>
@using Common;

@{
    string defaultImage = string.Empty;
}

<section class="section">
    <div class="row mb-2">
        <div class="col-lg-6">
            <h4>Hold Jewelry</h4>
        </div>
        <div class="col-lg-6">
            <div class="btn-group dropup float-end">
                <a class="" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="bi bi-three-dots-vertical"></i>
                </a>
                <input type="hidden" id="txtProductIds" />

                <ul class="dropdown-menu">
                    <li><a class="dropdown-item" href="#" data-status="Activated">Activated</a></li>
                    <li><a class="dropdown-item" href="#" data-status="Deactivated">Deactivated</a></li>
                    <li><a class="dropdown-item" href="#" data-status="Hold">Hold</a></li>
                </ul>

            </div>
        </div>

    </div>

    <div class="row mb-2">
        <div class="col-lg-12">
        </div>
        <div class="col-lg-12">
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <table class="table" id="RequestedListTable">
                <thead>
                    <tr>
                        <th scope="col"><input type="checkbox" class="chkId" id="chkAllIds" /></th>
                        <th scope="col">Status</th>
                        <th scope="col">Image</th>
                        <th scope="col">Title</th>
                        <th scope="col">Vendor</th>
                        <th scope="col">Style</th>
                        <th scope="col">Color name</th>
                        <th scope="col">Length</th>
                        <th scope="col">Band Width</th>
                        <th scope="col">Weight</th>
                        <th scope="col">Karat</th>
                        <th scope="col">Price</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null)
                    {
                        foreach (var item in Model)
                        {
                            defaultImage = string.Empty;
                            <tr>
                                <td><input type="checkbox" class="chkId" value="@item.Id" /></td>
                                <td>
                                    @item.UploadStatus
                                </td>
                                <td>
                                    <img src="@SD.ImgUrl/@defaultImage" alt="@item.Title" style="width:25px;" onerror="this.onerror=null;this.src='';" />
                                </td>
                                <td>
                                    <h5>@item.Title</h5>
                                    <p>@item.Grades @item.CTW @item.CenterShapeName @item.CategoryName</p>
                                </td>
                                <td>@item.VenderName</td>
                                <td>@item.Sku</td>
                                <td>@item.ColorName</td>
                                <td>@item.Length</td>
                                <td>@item.BandWidth</td>
                                <td>@item.GoldWeight</td>
                                <td>@item.Karat</td>
                                <td>@item.Price</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="11">No data found</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</section>


@section Scripts {
    <script>
        $(document).ready(function () {
            // Toggle all checkboxes when 'Select All' is clicked
            $('#chkAllIds').on('change', function () {
                var isChecked = $(this).is(':checked');
                $('#RequestedListTable .chkId').not(this).prop('checked', isChecked);
                updateSelectedIds();
            });

            // Handle individual checkbox change
            $('#RequestedListTable').on('change', '.chkId:not(#chkAllIds)', function () {
                var allChecked = $('#RequestedListTable .chkId:not(#chkAllIds)').length ===
                                 $('#RequestedListTable .chkId:not(#chkAllIds):checked').length;
                $('#chkAllIds').prop('checked', allChecked);
                updateSelectedIds();
            });

            // Update status button click
        $('.dropdown-item').on('click', function(e) {
            debugger;
            e.preventDefault();

            var status = $(this).data('status');
            var productIds = $('#txtProductIds').val();

            if (!productIds) {
                alert('No product IDs selected.');
                return;
            }

            var idsArray = productIds.split(',');

            $.ajax({
                url: '@Url.Action("ChangeStatus", "Jewellery")', // 🔁 Replace with your actual API endpoint
                method: 'POST',
                data: {
                    pIds: idsArray,
                    status: status
                },
                success: function(response) {
                    alert('Products updated to "' + status + '" successfully.');
                    console.log(response);
                    location.reload();
                },
                error: function(xhr, status, error) {
                    alert('An error occurred while updating products.');
                    console.error(error);
                }
            });
        });

            // Utility: Collect selected checkbox values and update hidden input
            function updateSelectedIds() {
                let selectedIds = getSelectedIds();
                $('#txtProductIds').val(selectedIds.join(','));
            }

            // Utility: Get selected checkbox values
            function getSelectedIds() {
                let ids = [];
                $('#RequestedListTable .chkId:not(#chkAllIds):checked').each(function () {
                    ids.push($(this).val());
                });
                return ids;
            }
        });



    </script>
}