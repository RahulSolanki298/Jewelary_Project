@using Common
@Html.AntiForgeryToken()

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" rel="stylesheet">

<section class="section">
    <div class="row mb-2">
        <div class="col-lg-6">
            <h4>
                <b> View your online Jewellery Inventory </b><span class="ml-2 badge badge-light blinkingTextRed">Live</span>
            </h4>
        </div>
        <div class="col-lg-6">
            <a href="@Url.Action("UploadJewellery","Jewellery")" class="btn btn-theme float-end m-2">Add Multiple Products</a>
            <a href="@Url.Action("UploadJewellery","Jewellery")" class="btn btn-theme float-end m-2">Add Single Product </a>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="">
                <div class="" id="jewelleryList">

                </div>
            </div>
        </div>
    </div>
</section>

<div class="modal fade" id="showFileUpload" tabindex="-1" data-bs-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content animate__animated animate__fadeInDown">
            <form id="uploadForm" asp-controller="Jewellery" asp-action="ExcelUpload" method="post" enctype="multipart/form-data">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title"><i class="fas fa-file-upload me-2"></i> Upload Excel or CSV File</h5>
                    <a class="text-white fs-5" data-bs-dismiss="modal" aria-label="Close" id="btnClose"><i class="fas fa-times-circle"></i></a>
                </div>
                <div class="modal-body">
                    @if (TempData["UploadSuccess"] != null)
                    {
                        <div class="alert alert-success">@TempData["UploadSuccess"]</div>
                    }
                    @if (TempData["UploadError"] != null)
                    {
                        <div class="alert alert-danger">@TempData["UploadError"]</div>
                    }
                    <div class="mb-3">
                        <label for="excelFile" class="form-label fw-bold">Select File</label>
                        <input type="file" class="form-control" id="excelFile" name="file" accept=".xls,.xlsx,.csv" required>
                    </div>
                    <div id="loader" style="display:none;">
                        <div class="spinner-border text-primary mb-2" role="status"></div>
                        Uploading your file... 🎉
                        <div class="confetti"></div>
                    </div>
                </div>
                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn btn-outline-danger" data-bs-dismiss="modal">
                        <i class="fas fa-times-circle me-1"></i> Close
                    </button>
                    <button id="uploadBtn" type="submit" class="btn btn-success">
                        <i class="fas fa-upload me-1"></i> Upload
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="showUploadedData" tabindex="-1" data-bs-backdrop="false">


</div>

<div class="modal fade" id="showProgramCollection" tabindex="-1" data-bs-backdrop="false">


</div>

<div class="modal fade" id="modalImages" aria-hidden="true" aria-labelledby="exampleModalToggleLabel" tabindex="-1">

</div>

@section Scripts
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js" integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
        $(document).ready(function(){
            getDiamondList();

            //$("#ExcelUpload").on("click",function(){
            //    $("#showFileUpload").modal("show");
            //});
            // $('#modalImages #ringTable').DataTable({
            //    pageLength: 10,
            //    lengthChange: true,    // Allows user to choose number of rows per page
            //    ordering: false,       // Disable sorting (optional)
            //    info: true,
            //    language: {
            //        emptyTable: "No rings found"
            //    }
            //});

            $('#chkRingsIds').on('change', function () {
                var isChecked = $(this).is(':checked');
                $('#ringTable .chkId').not(this).prop('checked', isChecked);
                updateSelectedIds();
            });

            // Handle individual checkbox change
            $('#jewelleryList').on('change', '.chkId:not(#chkAllIds)', function () {
                var allChecked = $('#ringTable .chkId:not(#chkAllIds)').length ===
                    $('#ringTable .chkId:not(#chkAllIds):checked').length;
                $('#chkAllIds').prop('checked', allChecked);
                updateSelectedIds();
            });

            $('#jewelleryList').on('change', '#chkAllIds', function () {
                var isChecked = $(this).is(':checked');
                $('#ringTable .chkId').not(this).prop('checked', isChecked);
                updateSelectedIds();
            });

            $('#uploadForm').on('submit', function (e) {
                e.preventDefault();

                const form = this;
                const formData = new FormData(form);

                $('#uploadBtn').prop('disabled', true).text('Uploading...');
                $('#loader').show();

                $.ajax({
                    url: form.action,
                    type: 'POST',
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        $("#showUploadedData").html(response);
                        // Show the new modal
                        $('#showUploadedData').modal('show');
                        $('#loader').hide();
                        $('#uploadBtn').prop('disabled', false).text('Upload');

                        // Inject response data into the modal

                    },
                    error: function (xhr) {
                        $('#loader').hide();
                        $('#uploadBtn').prop('disabled', false).text('Upload');
                        alert('Upload failed: ' + xhr.responseText);
                    }
                });
            });

            $("#btnClose").click(function () {
                $("#showFileUpload").modal("hide");
            });

            $('#jewelleryList').on('click', '.dropdown-item', function (e) {
                debugger;
                    e.preventDefault();

                    var status = $(this).data('status');
                    var productIds = $('#txtProductIds').val();

                    if (!productIds) {
                        alert('No product IDs selected.');
                        return;
                    }

                var idsArray = productIds.split(',');

                if (status == "Program" || status == "Collection") {

                }
                else
                {
                     $.ajax({
                        url: '@Url.Action("ChangeStatus", "Jewellery")', // 🔁 Replace with your actual API endpoint
                        method: 'POST',
                        data: {
                            pIds: idsArray,
                            status: status
                        },
                         success: function (response) {
                            Swal.fire({
                                title: 'Products updated to "' + status + '" successfully.',
                                icon: "success",
                                draggable: true
                            });
                             console.log(response);
                             setTimeout(function () {
                                 location.reload();
                             }, 600);

                        },
                        error: function(xhr, status, error) {
                            Swal.fire({
                                title: "An error occurred while updating products.",
                                icon: "success",
                                draggable: true
                            });
                            console.error(error);
                        }
                    });
                }
            });


            $("#modalImages").on("click", ".popupImgs", function () {
                const id = $(this).attr("id");

                $.ajax({
                    url: `@Url.Action("UpdateJewelryProductImageById", "Jewellery")?id=${id}`,
                    type: "GET",
                    success: function (data) {
                        console.log(data.imageUrl);
                        if (data.imageUrl && data.imageUrl !== "-") {
                            $("#mainImg").attr("src", '@SD.ImgUrl/' + data.imageUrl).show();
                            $("#mainVideo").hide();
                        }
                        else if (data.videoUrl && data.videoUrl !== "-") {
                            $("#videoUrl").attr("src", '@SD.ImgUrl/' + data.videoUrl);
                            $("#mainImg").hide();
                            $("#mainVideo").show()[0].load();  // reload video
                        }
                        else {
                            $("#mainImg").attr("src", "/assets/img/no-image.png").show();
                            $("#mainVideo").hide();
                        }

                    },
                    error: function (xhr, status, error) {
                        console.error("Error fetching images:", error);
                    }
                });
            });

            $("#jewelleryList").on("click", ".showImgs", function (e) {
                debugger;
                const $this = $(this); // Cache selector for performance
                const productId = $this.data("productkey");
                const shapeId = $this.data("shapeid");
                const colorId = $this.data("colorid");

                if (!productId) {
                    console.warn("Product ID not found.");
                    return;
                }

            $.ajax({
                url: `@Url.Action("JewelryProductImages", "Jewellery")`,
                type: "GET",
                data: {
                    productKey: productId,
                    shapeId: shapeId,
                    colorId: colorId
                },
                success: function (data) {
                    // Assuming you have a modal or container to show the images
                    $("#modalImages").html(data);
                    $("#modalImages").modal("show");
                },
                error: function (xhr, status, error) {
                    console.error("Error fetching images:", error);
                }
            });
        });

        });

        function getDiamondList() {
            $.ajax({
                url: '@Url.Action("GetJewellries", "Jewellery")',
                type: 'GET',
                success: function (result) {
                        $('#jewelleryList').html("");
                        $('#jewelleryList').html(result);
                },
                error: function (xhr, status, error) {
                    console.error('Error loading diamond list:', xhr.responseText, status, error);
                }
            });
        }


        function checkAll()
        {
            $.ajax({
                url: '@Url.Action("GetJewellries", "Jewellery")',
                type: 'GET',
                success: function (result)
                {
                    $('#jewelleryList').html("");
                    $('#jewelleryList').html(result);
                },
                error: function (xhr, status, error)
                {
                    console.error('Error loading diamond list:', error);
                }
            });
        }

        function updateSelectedIds() {
            let selectedIds = getSelectedIds();
            $('#txtProductIds').val(selectedIds.join(','));
        }

        function getSelectedIds() {
            let ids = [];
            $('#ringTable .chkId:not(#chkAllIds):checked').each(function () {
                ids.push($(this).val());
            });
            return ids;
        }


    </script>
}
