
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="breadcrumb-area">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="breadcrumb-wrap">
                    <nav aria-label="breadcrumb">
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item"><a href="#"><i class="fa fa-home"></i></a></li>
                            <li class="breadcrumb-item active" aria-current="page">Wishlist</li>
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- wishlist main wrapper start -->
<div class="wishlist-main-wrapper padding-top-20 padding-bottom-20" id="diamondContent" style="min-height:450px;">

</div>

@section Scripts
{
    <script>
        let wishlist = JSON.parse(localStorage.getItem("wishlist")) || [];
        let jewelWishlist = JSON.parse(localStorage.getItem("ProductWishlist")) || [];

        $(document).ready(function () {

            getWishList();

            $('#diamondContent').on('click', '.remove-diamond', function (e) {
                e.preventDefault();

                Swal.fire({
                    title: "Are you sure?",
                    text: "you want to remove this item from your wishlist?",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Yes, delete it!",
                    cancelButtonText: "No",
                    reverseButtons: true
                }).then((result) => {
                    
                    if (result.isConfirmed) {
                        var diamondId = $(this).attr('data-diamondId');
                        debugger;
                        /*var wishlist = JSON.parse(localStorage.getItem('wishlist')) || [];*/
                        wishlist = wishlist.filter(id => String(id) !== String(diamondId));

                        localStorage.setItem('wishlist', JSON.stringify(wishlist));

                        Swal.fire({
                            title: "Deleted!",
                            text: "Product has been removed from wishlist!",
                            icon: "success"
                        });
                        toastr.success("Product has been added to your wishlist.", "success");
                        location.reload();
                    } else {

                    }
                });
            });

            $('#diamondContent').on('click', '.remove-product', function (e) {
                e.preventDefault();

                Swal.fire({
                    title: "Are you sure?",
                    text: "you want to remove this item from your wishlist?",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Yes, delete it!",
                    cancelButtonText: "No",
                    reverseButtons: true
                }).then((result) => {

                    if (result.isConfirmed) {
                        var productId = $(this).attr('data-productId');
                        debugger;
                        /*var wishlist = JSON.parse(localStorage.getItem('ProductWishlist')) || [];*/
                        jewelWishlist = jewelWishlist.filter(id => String(id) !== String(productId));

                        localStorage.setItem('ProductWishlist', JSON.stringify(jewelWishlist));

                        Swal.fire({
                            title: "Deleted!",
                            text: "Product has been removed from wishlist!",
                            icon: "success"
                        });
                        toastr.success("Product has been added to your wishlist.", "success");
                        location.reload();
                    } else {

                    }
                });
            });

        });

        function getWishList() {
            debugger;
            if (wishlist.length > 0 || jewelWishlist.length > 0) {
                $.ajax({
                    url: '@Url.Action("GetWishListByIds", "Wishlist")',
                    type: 'GET',
                    data: {
                        diamondIds: wishlist.join(','),
                        productIds: jewelWishlist.join(',')
                    },
                    success: function (data) {
                        $("#diamondContent").html('');
                        $("#diamondContent").html(data);
                    },
                    error: function (error) {
                        console.error('Error fetching data:', error);
                    }
                });
            }
        }

    </script>
}

