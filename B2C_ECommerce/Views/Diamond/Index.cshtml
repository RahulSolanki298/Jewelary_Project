@using Common
<section>
	<div class="listingpage">
		<div class="home-giftbanner-main position-relative left-text-banner">
			<a href="#" aria-label="" class="d-block">
				<div class="ole-image-banner thumb text-center ">
					<img src="~/assets/img/banner/filter-cover-image.jpg" class="filter-top-image" width="3840" height="300" alt="" title="" />
				</div>
			</a>
		</div>
	</div>
</section>

<!-- Product Section -->
<section class="product-area filter-page-section-padding">
	<div class="container-fluid">
		<div class="row">
			<div class="col-12 text-center">
				<h2 class="title font-sans-serif">Shop Lab Created Loose Diamonds</h2>
			</div>
		</div>
	</div>
	<hr />
	<div class="container-fluid">
		<div class="card border-1 filter-bg-shadow">
			<div class="card-body p-3" id="filter-box">
				@Html.Partial("_FilterBox")
			</div>
		</div>
	</div>
</section>

<!-- Product Table -->
<div class="container-fluid" id="diamond-list-container">
</div>

@section Scripts {
	<script>

		$(function () {
			GetShapeDesign();
			GetCaratSize();
			GetColorData();
			

			var diamondFilters =
			{
				Colors: $('#colors').val() ? $('#colors').val() : [],
				Carats: $('#carats').val() ? $('#carats').val() : [],
				Shapes: $('#shapes').val() ? $('#shapes').val() : [],
				Clarities: $('#clarities').val() ? $('#clarities').val() : [],
				Prices: $('#prices').val() ? $('#prices').val() : [],
				Ratios: $('#ratios').val() ? $('#ratios').val() : [],
				Tables: $('#tables').val() ? $('#tables').val() : [],
				Depthes: $('#depthes').val() ? $('#depthes').val() : [],
				Polishes: $('#polishes').val() ? $('#polishes').val() : [],
				Fluors: $('#fluors').val() ? $('#fluors').val() : [],
				Symmetries: $('#symmetries').val() ? $('#symmetries').val() : []
			};
			getDiamondDataList(diamondFilters,1,10);

			var fixColors = ["D", "E", "F"];
			var fixClarity = ["IF", "VVS1", "VVS2", "VS1","VS2"];
			var fixCut = ["IDEAL", "EXCELLENT","VERY GOOD","GOOD","FAIR"];

			// $("#carat-size-slider").slider({
			// 	range: true,
			// 	min: 0,
			// 	max: 10,
			// 	step: 0.1,
			// 	values: [2, 8],
			// 	slide: function (event, ui) {
			// 		$("#minCaratSize").val(ui.values[0]);
			// 		$("#maxCaratSize").val(ui.values[1]);
			// 	}
			// });

			$("#price-slider").slider({
				range: true,
				min: 500,
				max: 50000,
				step: 0.01,
				values: [5000, 30000],
				slide: function (event, ui) {
					$("#minPrice").val("$" + ui.values[0]);
					$("#maxPrice").val("$" + ui.values[1]);
				}
			});


			$("#Cut-slider").slider({
				range: true,
				min: 0,
				max: fixCut.length - 1,
				step: 1,
				values: [0, 1],
				slide: function (event, ui) {
					$("#minCut").val(fixCut[ui.values[0]]);
					$("#maxCut").val(fixCut[ui.values[1]]);
				}
			});

			$("#Clarity-slider").slider({
				range: true,
				min: 0,
				max: fixClarity.length - 1,
				step: 1,
				values: [0, 1],
				slide: function (event, ui) {
					$("#minClarity").val(fixClarity[ui.values[0]]);
					$("#maxClarity").val(fixClarity[ui.values[1]]);
				}
			});

			$("#minPrice").val("$ "+$("#price-slider").slider("values", 0));
			$("#maxPrice").val("$ "+$("#price-slider").slider("values", 1));
			$("#minCaratSize").val($("#carat-size-slider").slider("values",0));
			$("#maxCaratSize").val($("#carat-size-slider").slider("values", 1));

			$("#minColor").val(fixColors[$("#color-slider").slider("values", 0)]);
			$("#maxColor").val(fixColors[$("#color-slider").slider("values", 1)]);

			$("#minCut").val(fixCut[$("#Cut-slider").slider("values", 0)]);
			$("#maxCut").val(fixCut[$("#Cut-slider").slider("values", 1)]);

			$("#minClarity").val(fixClarity[$("#Clarity-slider").slider("values", 0)]);
			$("#maxClarity").val(fixClarity[$("#Clarity-slider").slider("values", 1)]);

		});

		

		async function GetShapeDesign() {
		  try {
			const response = await $.ajax({
			  url: '@(SD.BaseApiUrl)/api/diamondproperty/get-shape-list', // API endpoint
			  method: 'GET', // Using GET request
			  dataType: 'json', // Expecting JSON response
			});

			if (Array.isArray(response) && response.length > 0) {
			  response.forEach(function (shape) {
				var shapeButton = '<div class="shape-btn text-center">';
				shapeButton += '<img src="' + shape.IconPath + '" alt="' + shape.Name + '" />';
				shapeButton += '<span>' + shape.Name + '</span>';
				shapeButton += '</div>';

				$('#filter-box #shape-list').append(shapeButton);
			  });
			} else {
			  $('#filter-box #shape-list').html('<p>No shapes available</p>');
			}
		  } catch (error) {
			console.error('Error fetching data: ', error);
			$('#filter-box #shape-list').html('<p>Failed to load shapes</p>');
		  }
		}

		async function GetCaratSize() {
			try {
				var response = await $.ajax({
					url: '@(SD.BaseApiUrl)/api/diamondproperty/get-carat-size-ranges', // API endpoint
					method: 'GET', // Using GET request
					dataType: 'json', // Expecting JSON response
				});

				// Initialize the slider with API response
				$("#carat-size-slider").slider({
					range: true,
					min: response.MinCaratSize,  // Set minimum from API response
					max: response.MaxCaratSize,  // Set maximum from API response
					step: 0.1, // Adjust step size as needed
					values: [response.MinCaratSize, response.MaxCaratSize / 2], // Default values
					slide: function (event, ui) {
						$("#minCaratSize").val(ui.values[0]);
						$("#maxCaratSize").val(ui.values[1]);
					}
				});

				// Set initial values
				$("#minCaratSize").val(response.MinCaratSize);
				$("#maxCaratSize").val(response.MaxCaratSize / 2);

			} catch (error) {
				console.error('Error fetching data: ', error);
				$('#filter-box #shape-list').html('<p>Failed to load shapes</p>');
			}
		}

		async function GetColorData() {
			try {
				var response = await $.ajax({
					url: '@(SD.BaseApiUrl)/api/diamondproperty/diamond-property/get-color-list', // API endpoint
					method: 'GET', // Using GET request
					dataType: 'json', // Expecting JSON response
				});

				var dataCount = Array.isArray(response) ? response.length : (response.data ? response.data.length : 0);

				// Initialize the slider with API response
				$("#color-slider").slider({
					range: true,
					min: 0,  // Set minimum from API response
					max: dataCount,  // Set maximum from API response
					step: 0.5, // Adjust step size as needed
					values: ["D", "E", "F"], // Default values
					slide: function (event, ui) {
						$("#minColor").val(0);
						$("#maxColor").val(dataCount);
					}
				});

				// Set initial values
				$("#minColor").val(response.MinCaratSize);
				$("#maxColor").val(response.MaxCaratSize / 2);

			} catch (error) {
				console.error('Error fetching data: ', error);
				$('#filter-box #shape-list').html('<p>Failed to load shapes</p>');
			}
		}

		async function getDiamondDataList(diamondFilters, pageNumber = 1, pageSize = 10) {
			debugger;
			return $.ajax({
				url: '/diamond/GetDiamondList', // Change this to your actual route
				type: 'POST',
				data: {
					diamondFilters: diamondFilters,
					pageNumber: pageNumber,
					pageSize: pageSize
				},
				success: function (data) {
					$('#diamond-list-container').html(data);
				},
				error: function (error) {
					console.error('Error fetching data:', error);
				}
			});
		}


	</script>
}
