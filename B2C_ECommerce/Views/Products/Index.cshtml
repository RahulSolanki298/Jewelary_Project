<!-- Product Section - Start -->
@{
    ViewBag.Title="Products";
	@*<link rel="stylesheet" href="~/assets/css/products.css">*@
}
@using Common

<!-- breadcrumb area start -->
<div class="breadcrumb-area">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="breadcrumb-wrap">
                    <nav aria-label="breadcrumb">
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item"><a href="index.html"><i class="fa fa-home"></i></a></li>
                            <li class="breadcrumb-item active" aria-current="page">@ViewBag.Title</li>
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>
 <!-- breadcrumb area end -->
<!-- page main wrapper start -->
 <div class="shop-main-wrapper filter-padding">

    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12">
                <span style="float:right;font-size:20px;margin-bottom:10px;" id="filterOpen" class="pointer"><i class="fa fa-filter"></i> Filter</span>
            </div>
        </div>

        <div id="FilterSection" style="display:none;">
            <div class="top-bar">
                <div class="reset">RESET</div>
                <div class="filterclose" id="filterclose">✕</div>
            </div>
            <div class="Main-Header" id="ProductFilters">
                
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12">
                <div class="shop-product-wrapper">
                    <!-- shop product top wrap start -->
                    <div class="shop-top-bar">
                        <div class="row align-items-center">
                            <div class="col-lg-7 col-md-6 order-2 order-md-1">
                                <div class="top-bar-left">
                                    <div class="product-view-mode">
                                        <a class="active" href="#" data-target="grid-view" data-bs-toggle="tooltip" title="Grid View"><i class="fa fa-th"></i></a>
                                        <a href="#" data-target="list-view" data-bs-toggle="tooltip" title="List View"><i class="fa fa-list"></i></a>
                                    </div>
                                    <div class="product-amount">
                                        <p>Showing 1–16 of 21 results</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-5 col-md-6 order-1 order-md-2">
                                <div class="top-bar-right">
                                    <div class="product-short">
                                        <p>Sort By : </p>
                                        <select class="nice-select" name="sortby">
                                            <option value="trending">Relevance</option>
                                            <option value="sales">Name (A - Z)</option>
                                            <option value="sales">Name (Z - A)</option>
                                            <option value="rating">Price (Low &gt; High)</option>
                                            <option value="date">Rating (Lowest)</option>
                                            <option value="price-asc">Model (A - Z)</option>
                                            <option value="price-asc">Model (Z - A)</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- shop product top wrap start -->
                    <!-- product item list wrapper start -->
                    <div id="loader-overlay">
                        <div class="text-center" id="txtLoader">
                            <img src="~/assets/loader/JF-WEB-LOADER.gif" style="width:100px;">
                        </div>
                    </div>
                    <div class="shop-product-wrap grid-view row mbn-30" id="MyProductsImg">

                    </div>
                    <!-- product item list wrapper end -->

                </div>
            </div>
        </div>
        <div class="row">
            <div class="row p-5">
                <div class="col-xl-12 text-center">
                    <button id="showMoreBtn" class="btn btn-dark text-capitalize">Show More</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    @*<script src="assets/js/plugins/slick.min.js"></script>*@

<script>
        var page = 1;
        var rangeVal = 10;

        const getValue = id => $(id).val() || '';
        const getArrayValue = id => $(id).val() || [];

        var filters = {
            Metals: getValue('#txtMetalIds'),
            Carats: getValue('#caratSizeIds'),
            Shapes: getArrayValue('#shapes'),
            category: getValue('#txtClarityIds'),
            FromPrice: getValue('#minPrice'),
            ToPrice: getValue('#maxPrice'),
        };

        function showLoader() {
            $('#txtLoader').show(); // This shows the loader
        }

        function hideLoader() {
            $('#txtLoader').hide(); // This hides the loader
        }

        $(document).ready(function(){
            loadAllFunctions();

            $("#minPrice").val("$" + $("#price-slider").slider("values", 0));
            $("#maxPrice").val("$" + $("#price-slider").slider("values", 1));


            $("#filterclose").click(function () {
                $("#FilterSection").hide();
            });

            $("#filterOpen").click(function () {
                $("#FilterSection").show();
            });


            // Generic slider initializer
            function initSlider(selector, options) {
                $(selector).slider({
                    range: true,
                    ...options
                });
            }

            // Price Slider
            initSlider("#price-slider1", {
                min: 500, max: 50000, step: 0.01, values: [5000, 30000],
                slide: (e, ui) => {
                    $("#minPrice1").val("$" + ui.values[0]);
                    $("#maxPrice1").val("$" + ui.values[1]);
                }
            });

            $("#carat-size-slider").slider({
                range: true,
                min: 0,  // Set minimum from API response
                max: 50,  // Set maximum from API response
                step: 0.1, // Adjust step size as needed
                values: [0, 50], // Default values
                slide: function (event, ui) {
                    debugger;
                    $("#minCarat").val(ui.values[0]);
                    $("#maxCarat").val(ui.values[1]);
                }
            });

            // Set initial values
            

            //Rajs
            $("#minPrice1").val("$" + $("#price-slider1").slider("values", 0));
            $("#maxPrice1").val("$" + $("#price-slider1").slider("values", 1));

            $("#minCaratSize").val($("#carat-size-slider").slider("values", 0));
            $("#maxCaratSize").val($("#carat-size-slider").slider("values", 1));

        });

        function GetProductFilters() {
            $.ajax({
                url: '/Products/GetProductFilters',
                type: 'GET',
                dataType: 'html'
            })
            .done(function(response) {
                $("#ProductFilters").html('');
                $('#ProductFilters').html(response);
            })
            .fail(function(xhr, status, error) {
                console.error('AJAX error:', status, error);
            });
        }

        async function GetProducts(filters, pageNumber = 1, pageSize = 10) {
            showLoader();
            return $.ajax({
                url: '/Products/GetProductList', // Ensure this route matches your controller/action
                type: 'POST',
                data: {
                    filters: filters,  // Ensure this matches your action parameter name if model binding
                    pageNumber: pageNumber,
                    pageSize: pageSize
                },
                success: function (data) {
                    debugger;
                    $('#MyProductsImg').html('');   // Clear existing content
                    $('#MyProductsImg').html(data); // Use 'data' instead of 'response'
                    hideLoader();
                },
                error: function (error) {
                    console.error('Error fetching data:', error);
                    hideLoader();
                }
            });
        }



        async function loadAllFunctions() {
            showLoader();
            try {
                await Promise.all([
                    GetProductFilters()
                ]);
                GetProducts(filters, page, rangeVal);
            } catch (error) {
                console.error("An error occurred while loading data:", error);
            }
            hideLoader();
        }

        

</script>

}